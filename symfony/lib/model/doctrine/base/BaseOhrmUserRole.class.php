<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmUserRole', 'doctrine');

/**
 * BaseOhrmUserRole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $display_name
 * @property integer $is_assignable
 * @property integer $is_predefined
 * 
 * @method integer      getId()            Returns the current record's "id" value
 * @method string       getName()          Returns the current record's "name" value
 * @method string       getDisplayName()   Returns the current record's "display_name" value
 * @method integer      getIsAssignable()  Returns the current record's "is_assignable" value
 * @method integer      getIsPredefined()  Returns the current record's "is_predefined" value
 * @method OhrmUserRole setId()            Sets the current record's "id" value
 * @method OhrmUserRole setName()          Sets the current record's "name" value
 * @method OhrmUserRole setDisplayName()   Sets the current record's "display_name" value
 * @method OhrmUserRole setIsAssignable()  Sets the current record's "is_assignable" value
 * @method OhrmUserRole setIsPredefined()  Sets the current record's "is_predefined" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmUserRole extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_user_role');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('display_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_assignable', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_predefined', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}